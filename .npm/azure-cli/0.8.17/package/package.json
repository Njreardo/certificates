{"name":"azure-cli","author":{"name":"Microsoft Corporation"},"contributors":[{"name":"Block, Glenn","email":"gblock@microsoft.com"},{"name":"Cowlishaw, Mark","email":"markcowl@microsoft.com"},{"name":"Dejardin, Louis","email":"loudej@microsoft.com"},{"name":"Georgiev, Yavor","email":"yavorg@microsoft.com"},{"name":"Janczuk, Tomasz","email":"tjanczuk@microsoft.com"},{"name":"Rodrigues, Andre","email":"andrerod@microsoft.com"},{"name":"Tavares, Chris","email":"ctavares@microsoft.com"},{"name":"Zavery, Amar","email":"amzavery@microsoft.com"},{"name":"Wang, Yugang","email":"yugangw@microsoft.com"}],"version":"0.8.17","description":"Microsoft Azure Cross Platform Command Line tool","tags":["azure","cli"],"keywords":["node","azure","cli","cloud hosting","deployment"],"main":"./lib/cli.js","preferGlobal":"true","engines":{"node":">= 0.8.26"},"licenses":[{"type":"Apache","url":"http://www.apache.org/licenses/LICENSE-2.0"}],"dependencies":{"adal-node":"0.1.12","async":"0.2.7","azure":"0.10.5","azure-common":"0.9.11","azure-gallery":"2.0.0-pre.15","azure-mgmt-authorization":"0.9.0-pre.6","azure-mgmt-resource":"2.0.0-pre.16","azure-storage":"0.4.1","azure-storage-legacy":"0.9.13","azure-extra":"0.1.7","mime":"~1.2.4","colors":"0.x.x","commander":"1.0.4","easy-table":"0.0.1","event-stream":"3.1.5","eyes":"0.x.x","github":"0.1.6","kuduscript":"0.2.2","moment":"2.6.0","node-uuid":"1.2.0","omelette":"0.1.0","request":"2.27.0","streamline":"0.10.17","streamline-streams":"0.1.5","through":"2.3.4","tunnel":"0.0.2","underscore":"1.4.x","validator":"~3.1.0","winston":"0.6.x","wordwrap":"0.0.2","xml2js":"0.1.x","xmlbuilder":"0.4.x","readable-stream":"~1.0.0","openssl-wrapper":"0.2.1","caller-id":"0.1.x"},"devDependencies":{"mocha":"1.16.0","jshint":"<= 2.6.0","sinon":"*","should":"3.3.2","nock":"0.16","winston-memory":"*","cucumber":"~0.3.0"},"homepage":"https://github.com/Azure/azure-xplat-cli","repository":{"type":"git","url":"git@github.com:Azure/azure-xplat-cli.git"},"bugs":{"url":"https://github.com/Azure/azure-xplat-cli/issues"},"scripts":{"test":"npm -s run-script jshint && npm -s run-script unit && npm -s run-script unit-arm","unit":"node scripts/unit.js testlist.txt","unit-mc":"node scripts/unit.js --mc testlistmc.txt","unit-arm":"node scripts/unit.js testlistarm.txt","jshint":"jshint lib --jslint-reporter --extra-ext ._js","preci":"jshint lib --reporter=checkstyle --extra-ext ._js > checkstyle-result.xml","ci":"node scripts/unit.js testlist.txt -xunit","preacceptance":"node scripts/cuke-environment.js setup","acceptance":"node node_modules/cucumber/bin/cucumber.js","postacceptance":"node scripts/cuke-environment.js teardown","extract-labels":"node scripts/extract-labels"},"bin":{"azure":"./bin/azure"},"readme":"# Microsoft Azure Xplat-CLI for Windows, Mac and Linux\n\n[![NPM version](https://badge.fury.io/js/azure-cli.png)](http://badge.fury.io/js/azure-cli) [![Build Status](https://travis-ci.org/Azure/azure-xplat-cli.png?branch=master)](https://travis-ci.org/Azure/azure-xplat-cli)\n\nThis project provides a cross-platform command line interface for developers and IT administrators to develop, deploy and manage Microsoft Azure applications.\n\n## Features\n\n* Accounts\n    * Azure Active Directory authentication for Organizational ID\n    * Download and import Azure publish settings\n    * List imported Azure subscriptions\n    * Select current subscription\n    * Manage Azure environments\n    * Create and manage affinity groups\n    * Export management certificate\n* Storage\n    * Create and manage Storage Accounts\n    * Create and manage container, blob and ACL\n* Websites\n    * Create and manage Microsoft Azure websites\n    * Download site log files and get real time log streaming\n    * Manage Deployments\n    * Configure GitHub integration\n    * Create, manage and swap slots\n    * Create and manage WebJobs\n* Virtual machines\n    * Create and manage Windows and Linux Virtual machines\n    * Create and manage VM endpoints\n    * Create and manage Virtual Machine Images\n    * Create and manage certificates\n    * CloudInit for Ubuntu VM\n    * Create and manage Docker host virtual machines\n    * Create and manage VM extensions\n* Network\n    * Import and export network configuration\n    * Create and manage virtual network\n    * Create and manage DNS server\n    * Create and manage reserved IP addresses\n* Mobile Services\n    * Create and manage Mobile Services\n    * Manage tables, scripts, and configuration\n    * Access logs\n    * Access data\n    * Add custom domains and enable SSL\n* Service Bus\n    * Create and manage Service Bus namespaces\n* SQL Database\n    * Create and manage SQL Servers, Firewall rules and Databases\n* Resource Manager\n    * Manage resource groups and deployments\n    * Query and download gallery templates\n    * Manage individual resources\n\n## Installation\n\n### Install from npm\n\nYou can install the azure-cli npm package directly.\n```bash\nnpm install -g azure-cli\n```\n\n### Install on Ubuntu\nThe Xplat-CLI requires Node.js. Installation varies slightly by Ubuntu version.\n\n**Ubuntu 14.04 Trusty Tahr**\n\nOn Ubuntu 14, the Node.js package is called nodejs-legacy. The npm package is installed first to get the Node Package Manager used to install the CLI.\n\n```bash\nsudo apt-get install nodejs-legacy\nsudo apt-get install npm\nsudo npm install -g azure-cli\n```\n**Ubuntu 12.04 Precise Pangolin**\n\nOn Ubuntu 12, the version of Node.js available in the default package manager is too old. You can use the Personal Package Archive feature to install the current binary distribution. First, install the curl package to easily retrieve the install script.\n\n```bash\nsudo apt-get install curl\ncurl -sL https://deb.nodesource.com/setup | sudo bash -\nsudo apt-get install -y nodejs\nsudo npm install -g azure-cli\n```\n\n### Pre-compiled installers\n\n* [Windows](http://go.microsoft.com/fwlink/?linkid=254279)\n* [Mac](http://go.microsoft.com/fwlink/?Linkid=252249) \n* [Linux](http://go.microsoft.com/fwlink/?linkid=253472)\n\n### Download Source Code\n\nYou can also install the Azure Xplat-CLI from sources using **git**  and **npm**.\n\n```bash\ngit clone https://github.com/Azure/azure-xplat-cli.git\ncd ./azure-xplat-cli\nnpm install\n```\n\n### Configure auto-complete\n\nAuto-complete is supported for Mac and Linux.\n\nTo enable it in zsh, run:\n\n```bash\necho '. <(azure --completion)' >> .zshrc\n```\n\nTo enable it in bash, run:\n\n```bash\nazure --completion >> ~/azure.completion.sh\necho 'source ~/azure.completion.sh' >> .bash_profile\n```\n\n## Get Started\n\n* First, get authenticated with Microsoft Azure. For details, read [this article](http://azure.microsoft.com/en-us/documentation/articles/xplat-cli/).\n  * Option 1: Login with your Organizational account. Azure Active Directory authentication is used in this case. No management certificate is needed. **Note**: Authentication with a Microsoft account is not supported at this time. You can create a free Organizational account in the Azure portal for use in the CLI.\n  * Option 2: Download and import a publish settings file which contains a management certificate.\n\nIf you use both mechanisms on the same subscription, Azure Active Directory authentication will be used by default. If you want to go back to management certificate authentication, please use ``azure logout``, which will remove the Azure Active Directory information and bring management certificate authentication back in.\n\n#### Login directly from xplat-cli (Azure Active Directory authentication)\n\n```bash\n# This will prompt for your password in the console\nazure login -u <your organizational ID email address>\n\n# use the commands to manage your services/applications\nazure site create --location \"West US\" mywebsite\n```\n\n#### Use publish settings file (Management certificate authentication)\n\n```bash\n# Download a file which contains the publish settings information of your subscription.\n# This will open a browser window and ask you to log in to get the file.\nazure account download\n\n# Import the file you just downloaded.\n# Notice that the file contains credential of your subscription so you don't want to make it public\n# (like check in to source control, etc.).\nazure account import <file location>\n\n# Use the commands to manage your services/applications\nazure site create --location \"West US\" mywebsite\n```\n\n### azure cli on Ubuntu\nIf you want to run xplat cli on Ubuntu, then you should install **nodejs-legacy** instead of **nodejs**. For more information please check the following links:\n- [why there is a problem with nodejs installation on ubuntu](http://stackoverflow.com/questions/14914715/express-js-no-such-file-or-directory/14914716#14914716)\n- [how to solve the nodejs installation problem on ubuntu](https://github.com/expressjs/keygrip/issues/7)\n\nPlease perform the installation steps in following order:\n```bash\nsudo apt-get install nodejs-legacy\nsudo apt-get install npm\nsudo npm install -g azure-cli\n```\n\n## 2 Modes\n\nStarting from 0.8.0, we are adding a separate mode for Resource Manager. You can use the following command to switch between the\n\n* Service management: commands using the Azure service management API\n* Resource manager: commands using the Azure Resource Manager API\n\nThey are not designed to work together.\n\n```bash\nazure config mode asm # service management\nazure config mode arm # resource manager\n```\n\n**For more details on the commands, please see the [command line tool reference](http://go.microsoft.com/fwlink/?LinkId=252246&clcid=0x409) and this [How to Guide](http://azure.microsoft.com/en-us/documentation/articles/xplat-cli/)**\n\n## Docker\n\nUsage is same as standard vm create.\u0001\n\n    azure vm docker create [options] <dns-name> <image> <user-name> [password]\n\nThis command only supports Ubuntu 14.04 based images. Docker is configured on the VM using HTTPS as described here: http://docs.docker.io/articles/https/ By default, certificates are put in `~/.docker`, and Docker is configured to run on port 4243. These can be configured using new options:\n\n    -dp, --docker-port [port]              Port to use for docker [4243]\n    -dc, --docker-cert-dir [dir]           Directory containing docker certs [.docker/]\n\t\nAfter the VM is created. It can be used as a Docker host with the `-H` option or `DOCKER_HOST` environment variable.\n\n    docker --tls -H tcp://<my-host>.cloudapp.net:4243 run\n\nNote: To run docker commands on windows make sure ssl agent is installed.\n\t\n## Setting up Fiddler for CLI\n\nYou need to set the following environment variables to capture the HTTP traffic generated from the execution of xplat cli commands\n\n```bash\nset NODE_TLS_REJECT_UNAUTHORIZED=0\nset HTTPS_PROXY=http://127.0.0.1:8888\n```\n## Want to know the underlying HTTP traffic when you execute the command\nYou can use the -vv option to see the actual REST requests on the console.\n```bash\nazure site create --location \"West US\" mytestsite -vv\n```\n\n## Running Tests\n\nSee [this page for instructions](https://github.com/Azure/azure-xplat-cli/wiki/Running-Tests) that describe how to run the test suite.\n\n## Learn More\nFor documentation on how to host Node.js applications on Microsoft Azure, please see the [Microsoft Azure Node.js Developer Center](http://www.windowsazure.com/en-us/develop/nodejs/).\n\n## Contribute Code or Provide Feedback\n\nIf you would like to become an active contributor to this project please follow the instructions provided in [Microsoft Azure Projects Contribution Guidelines](http://windowsazure.github.com/guidelines.html).\n\nPlease send pull requests only to the **Dev branch**. Please make sure that you have checked in tests and recorded them live for your contribution. **Pull requests without sufficient tests will not be accepted.**\n\nIf you encounter any bugs with the library please file an issue in the [Issues](https://github.com/Azure/azure-xplat-cli/issues) section of the project.\n","readmeFilename":"README.md","_id":"azure-cli@0.8.17","_from":"azure-cli@*"}